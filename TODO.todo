Main tasks:
    ☐ Alternative operation modes:
        ✔ Echo @done (1/22/2022, 8:43:37 AM)
            Completely mirror one directory to another.
        ☐ Synchronize
            Sync the newest versions.
            When the size and time last modified attributes are the same, then a hash is performed. What do we do when the hash differs?
                We have no way of knowing which is the "newest".
                Alert the user. Provide an easy to way for the user to "select" which one is newest.
                    Maybe allow the usage of an external diff tool?
        ☐ Contribute
            No deletion on destination. Only additions/updates. 
    ☐ Network file navigation
        ☐ FTP
        ☐ SFTP
        ☐ WebDAV
        ☐ SMB
        ☐ NFS
    ☐ Cross-platform support
        I believe most (if not all) of the code is written in a cross-platform supportive manner. - I ensured that all external libraries support it, and use traditional standard C++ coding standards whenever available.
        I need to learn how to compile for different platforms.
    ☐ Allow the usage of pre-determined files.
        ☐ Allow individual files to be created and exported.
        ☐ Allow individual files to be given and used.
    ☐ User Interface Option?
    ☐ Allow using a config file
        ☐ Allow the supplying of which entry in the file to use, to simplifying management of multiple entries.
    ☐ Write documentation
        ☐ Also, create the text for the "-h/--help" arguments.
            ✔ -h writing. @done (1/29/2022, 2:05:14 PM)
            ☐ --help writing. - Maybe just copy the readme.md?
    ☐ Allow excluding and including of additional folders, files.
        ☐ Including
            Including additional folders may be tough with the current method of comparing directories. - Brainstorming needs to be done.
        ☐ Excluding
        ☐ Mask implementation
            Maybe just use regex?
    ☐ Revamp argument handling @today
        ✔ Change how single and double dashes are handled. @done (1/29/2022, 1:57:49 PM)
        ✔ Add deletion warning to program, to warn users when/where files COULD be effected. @done (1/23/2022, 3:04:06 PM)
            ✔ Also allow a flag arg to disable this warning. @done (1/23/2022, 3:04:05 PM)
        ✔ Add a flag arg to hide console output. Show it by default @done (1/23/2022, 2:16:35 PM)
            ✔ This should probably pause the output at the end of running. - Maybe an arg mutation for this? - No mutation. If the console is shown, pause at the end. @done (1/23/2022, 2:16:35 PM)
        ☐ Add a flag that allows the user to force that deletions and overwrites do not take place.
            This may not be necessary. Just know what you are doing and have a proper backup until you feel comfortable.
Other features:
    
    










