Main tasks:
	☐ Alternative operation modes: @high
		✔ Echo @done (1/22/2022, 8:43:37 AM)
			✔ Completely mirror one directory to another. @done (1/29/2022, 5:43:03 PM)
		☐ Synchronize
			☐ Sync the newest versions from the appropriate directory.
			When the size and time last modified attributes are the same, then a hash is performed. What do we do when the hash differs?
				We have no way of knowing which is the "newest".
				Alert the user. Provide an easy to way for the user to "select" which one is newest.
					This should be done by providing a CSV of the matching files that could not be handled by the application. The user can then remove one of the file paths. Whichever file is kept, is then copied to the other.
						An additional argument needs created to handle this single CSV reading and action performing. 
				More thinking needs done here...
			Synchronize has been put on the bench for now. I will almost definitely come back to this.
		✔ Contribute @done (1/29/2022, 6:36:36 PM)
			No deletion on destination. Only additions/updates.
	☐ Network file navigation @high
		☐ FTP
		☐ SFTP
		☐ WebDAV
		☐ SMB
		☐ NFS
	☐ Cross-platform support @low
		I believe most (if not all) of the code is written in a cross-platform supportive manner. - I ensured that all external libraries support it, and use traditional standard C++ coding standards whenever available.
		☐ Learn how to compile for different platforms.
	☐ Allow the usage of pre-determined files. @high
		☐ Allow individual files to be exported.
			☐ First Directory DB (DB1)
			☐ Second Directory DB (DB2)
			☐ File Operation Action File (FileOpAction)
			☐ Hash Action File (HashActions)
		☐ Allow individual files to be imported.
			☐ First Directory DB (DB1)
			☐ Second Directory DB (DB2)
			☐ File Operation Action File (FileOpAction)
			☐ Hash Action File (HashActions)
	☐ User Interface Option? @low
	✔ Allow using a config file. @low @done (3/22/2022, 10:27:51 AM)
		✔ Allow the user to specify which config entry to use from the file, so several configurations can be stored in a single file. @done (3/22/2022, 10:27:50 AM)
		The config file would mean that no arguments are needed besides which entry to use and the location of the config file.
		This entire task may not be necessary. Although, if I allow the use of external inclusion/exclusion files then it really isn't that bad.
			Maybe the inclusion/exclusion should be included in the config.
				I think allowing this makes a lot of sense, while also allowing the config and cmd to point to external files.
				Planning how the formatting will be handled will be very important.
		✔ Allow the user to export a configuration file entry, that can be appended to an existing config. @done (3/22/2022, 9:52:04 AM)
	☐ Write documentation @low
		☐ Create basic usage.
		☐ Create detailed overview of how the program works.
		☐ Create detailed switch/argument explanation with examples.
		☐ Also, create the text for the "-h/--help" arguments.
			✔ -h writing. @done (1/29/2022, 2:05:14 PM)
			☐ --help writing. - Maybe just copy the readme.md?
	☐ Allow excluding and including of additional folders, files. @high
		☐ Mask implementation
			Maybe just use regex?
		☐ Including
			Including additional folders may be tough with the current method of comparing directories. - Brainstorming needs to be done here.
		☐ Excluding
			Should this be done by providing a text file or receiving several inputs.
				Potentially a mutation to the argument could let you choose, in case your exclusions are simple.
	✔ Revamp argument handling @low @done (3/22/2022, 10:33:09 AM)
		✔ Change how single and double dashes are handled. @done (1/29/2022, 4:16:42 PM)
		✔ The --no-recursive switch needs to take an input, and work properly. @done (1/29/2022, 4:16:59 PM)
		✔ Add deletion warning to program, to warn users when/where files COULD be effected. @done (1/23/2022, 3:04:06 PM)
			✔ Also allow a flag arg to disable this warning. @done (1/23/2022, 3:04:05 PM)
		✔ Add a flag arg to hide console output. Show it by default @done (1/23/2022, 2:16:35 PM)
			✔ This should probably pause the output at the end of running. - Maybe an arg mutation for this? - No mutation. If the console is shown, pause at the end. @done (1/23/2022, 2:16:35 PM)
		✘ Have the program check the folder count, file count, and size (bytes) of the directories and return if they are what is expect. @cancelled (3/22/2022, 10:33:08 AM)
			This would help debugging things and potentially allow users to identify when issues go wrong.
			Maybe a flag can be passed that says "re-run the program until it is what it expects".
				This feels potentially dangerous, and wasteful. Especially if a bug were to occur or something else is changing the files.
Other features:
	☐ Allow specifying where "internal" files get output to when using --output-files.
		It probably should be a bool, but instead a string that stores the output directory.
	☐ Ability to specify which file(s) to export.
	☐ Add argument that skips all "inline" command prompt stuff.
		Maybe piggy-back off of the --no-warning argument?
		"Inline command prompt stuff" refers to the ability to fix some issues via prompts from the program.
			The alternative is to just notify the user of what went wrong and terminate the program immediately.
		This may not be necessary, but might be nice for automated runnings.
	☐ Allow configurations to be converted into a command string.
General Bugs/Fixes:
	☐ Look into how the program acts when one directory is nested within another.
		This may just need to be prevented.
	☐ Windows Max Path Bypass should be able to get applied to each directory independently.
	independently
	☐ Add more debug logging to the argument handling and configuration file related things.
	☐ I noticed an issue with files that have an invalid date modified time.
		I had a few files with their last modified time set to 01/01/2098.
			These files did NOT copy properly.
		Modifying the files to update the time fixed the issue.
		Should there be a check for this? It could prompt the user and ask if they want to update X files last modified times.
			By default, maybe it just fails and logs it in an error file.









