Main tasks:
    ☐ Alternative operation modes: @high 
        ✔ Echo @done (1/22/2022, 8:43:37 AM)
            Completely mirror one directory to another.
        ☐ Synchronize
            Sync the newest versions.
            When the size and time last modified attributes are the same, then a hash is performed. What do we do when the hash differs?
                We have no way of knowing which is the "newest".
                Alert the user. Provide an easy to way for the user to "select" which one is newest.
                    Maybe allow the usage of an external diff tool?
        ☐ Contribute
            No deletion on destination. Only additions/updates.
    ☐ Network file navigation @high
        ☐ FTP
        ☐ SFTP
        ☐ WebDAV
        ☐ SMB
        ☐ NFS
    ☐ Cross-platform support @low
        I believe most (if not all) of the code is written in a cross-platform supportive manner. - I ensured that all external libraries support it, and use traditional standard C++ coding standards whenever available.
        I need to learn how to compile for different platforms.
    ☐ Allow the usage of pre-determined files. @high
        ☐ Allow individual files to be exported.
            ☐ First Directory DB (DB1)
            ☐ Second Directory DB (DB2)
            ☐ File Operation Action File (FileOpAction)
            ☐ Hash Action File (HashActions)
        ☐ Allow individual files to be imported.
            ☐ First Directory DB (DB1)
            ☐ Second Directory DB (DB2)
            ☐ File Operation Action File (FileOpAction)
            ☐ Hash Action File (HashActions)
    ☐ User Interface Option? @low
    ☐ Allow using a config file. @low
        ☐ Allow the user to specify which config entry to use from the file, so several configurations can be stored in a single file.
        The config file would mean that no arguments are needed besides which entry to use and the location of the config file.
        This entire task may not be necessary. Although, if I allow the use of external inclusion/exclusion files then it really isn't that bad.
            Maybe the inclusion/exclusion should be included in the config.
                I think allowing this makes a lot of sense, while also allowing the config and cmd to point to external files.
                Planning how the formatting will be handled will be very important.
        ☐ Allow the user to export a configuration file entry, that can be appended to an existing config.
    ☐ Write documentation @low
        ☐ Create basic usage.
        ☐ Create detailed overview of how the program works.
        ☐ Create detailed switch/argument explanation with examples.
        ☐ Also, create the text for the "-h/--help" arguments.
            ✔ -h writing. @done (1/29/2022, 2:05:14 PM)
            ☐ --help writing. - Maybe just copy the readme.md?
    ☐ Allow excluding and including of additional folders, files. @high
        ☐ Mask implementation
            Maybe just use regex?
        ☐ Including
            Including additional folders may be tough with the current method of comparing directories. - Brainstorming needs to be done here.
        ☐ Excluding
            Should this be done by providing a text file or receiving several inputs.
                Potentially a mutation to the argument could let you choose, in case your exclusions are simple.
    ☐ Revamp argument handling @low
        ✔ Change how single and double dashes are handled. @done (1/29/2022, 4:16:42 PM)
        ✔ The --no-recursive switch needs to take an input, and work properly. @done (1/29/2022, 4:16:59 PM)
        ✔ Add deletion warning to program, to warn users when/where files COULD be effected. @done (1/23/2022, 3:04:06 PM)
            ✔ Also allow a flag arg to disable this warning. @done (1/23/2022, 3:04:05 PM)
        ✔ Add a flag arg to hide console output. Show it by default @done (1/23/2022, 2:16:35 PM)
            ✔ This should probably pause the output at the end of running. - Maybe an arg mutation for this? - No mutation. If the console is shown, pause at the end. @done (1/23/2022, 2:16:35 PM)
        ☐ Add a flag that allows the user to force that deletions and overwrites do not take place.
            This may not be necessary. Just know what you are doing and have a proper backup until you feel comfortable.
General Bugs/Fixes:
    ☐ Look into how the program acts when one directory is nested within another.
        This may just need to be prevented.
    










